function cg = CG(j1,m1,j2,m2,j,m)
assert(isscalar(j1) && isscalar(m1) && isscalar(j2) && isscalar(m2) && isscalar(j) && isscalar(m),'All inputs must be scalars.')
if j1 < 0 || j2 < 0 || j < 0 || ...
mod(2*j1,1) ~= 0 || mod(2*j2,1) ~= 0 || mod(2*j,1) ~= 0 || ...
mod(2*m1,1) ~= 0 || mod(2*m2,1) ~= 0 || mod(2*m,1) ~= 0 || ...
abs(m1) > j1 || abs(m2) > j2 || abs(m) > j || ...
j1+m1 < 0 || j2+m2 < 0 || j+m < 0 || j1+j2+j < 0 ||...
mod(j1+m1,1) ~= 0 || mod(j2+m2,1) ~= 0 || mod(j+m,1) ~= 0 || ...
mod(j1+j2+j,1) ~= 0
error(sprintf('Clebsch-Gordan coefficient only defined if: \n 1. j1, j2, j are integer or half-integer non-negative numbers. \n 2. m1, m2, m are integer or half-integer numbers. \n 3. abs(m1)<=j1, abs(m2)<=j2, abs(m)<=j \n 4. j1+m1, j2+m2, j+m, j1+j2+j are integer non-negative numbers.'))
elseif m1+m2-m ~= 0 || j < abs(j1-j2) || j > j1+j2
C = 0;
return
end
k = max([0,j2-j-m1,j1-j+m2]):min([j1+j2-j,j1-m1,j2+m2]);
if j+j1-j2 > 21 || j+j2-j1 > 21 || j1+j2-j > 21 || j1+j2+j+1 > 21 || ...
j+m > 21 || j-m > 21 || j1+m1 > 21 || j1-m1 > 21 || ...
j2+m2 > 21 || j2-m2 > 21 || any(k > 21) || ...
any(j1+j2-j-k > 21) || any(j1-m1-k > 21) || ...
any(j2+m2-k > 21) || any(j-j2+m1+k > 21) || any(j-j1-m2+k > 21)
warning('The argument to one or more of the factorials used in the computation of the requested Clebsch-Gordan coefficient is greater than 21, this can result in inaccuracies (see Matlab documentation for the FACTORIAL function).')
end
cg = sqrt((2*j+1)*factorial(j+j1-j2)*factorial(j+j2-j1)*factorial(j1+j2-j)/factorial(j1+j2+j+1))*...
sqrt(factorial(j+m)*factorial(j-m)*factorial(j1+m1)*factorial(j1-m1)*factorial(j2+m2)*factorial(j2-m2))*...
sum(((-1).^k)./(factorial(k).*factorial(j1+j2-j-k).*factorial(j1-m1-k).*factorial(j2+m2-k).*factorial(j-j2+m1+k).*factorial(j-j1-m2+k)));
end
