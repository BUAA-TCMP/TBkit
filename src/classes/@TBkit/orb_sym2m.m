function m_num = orb_sym2m(input)
input = string(input);
switch input
    case {'I','s','S','z','pz','Pz','p_z','z^2','dz^2','d_z^2','z^3','fz_3','0'}
        m_num = 0;
    case {'-1','y','py','p_y','P_y','yz','zy','dyz','d_yz','dzy','d_zy',...
            'yz^2','z^2y','f_yz^2','fyz^2','f_z^2y','fz^2y'}
        m_num = -1;
    case {'1','x','px','p_x','P_x','xz','zx','dxz','d_xz','dzx','d_zx',...
            'xz^2','z^2x','f_xz^2','fxz^2','f_z^2x','fz^2x'}
        m_num = 1;
    case {'-2','xy','yx','dxy','d_xy','dyx','d_yx',...
            'xyz','zxy','yzx','xzy','zyx','yxz',...
            'fxyz','fzxy','fyzx','fxzy','fzyx','fyxz',...
            'f_xyz','f_zxy','f_yzx','f_xzy','f_zyx','f_yxz'}
        m_num = -2;
    case {'2','(x^2-y^2)','-(y^2-x^2)','d(x^2-y^2)','d_(x^2-y^2)','x^2-y^2',...
            'dx2y2','d_x2y2','dx2-y2','d_x2-y2',...
            '(x^2-y^2)z','z(x^2-y^2)','f_(x^2-y^2)z','f_z(x^2-y^2)',...
            'f(x^2-y^2)z','fz(x^2-y^2)','fzx2y2','f_zx2y2','fx2y2z','f_x2y2z'}
        m_num = 2;
    case {'3','y(3x^2-y2)','(3x^2-y^2)','y3x2-y2','3x2-y2y','y3x2y2',...
            'fy(3x^2-y2)','f(3x^2-y^2)','fy3x2-y2','f3x2-y2y','fy3x2y2',...
            'f_y(3x^2-y2)','f_(3x^2-y^2)','f_y3x2-y2','f_3x2-y2y','f_y3x2y2',...
            }
        m_num = 3;
    case {'-3','x(3y^2-x2)','(3y^2-x^2)','x3y2-x2','3y2-x2x','x3y2x2',...
            'fx(3y^2-x2)','f(3y^2-x^2)','fx3y2-x2','f3y2-x2x','fx3y2x2',...
            'f_x(3y^2-x2)','f_(3y^2-x^2)','f_x3y2-x2','f_3y2-x2x','f_x3y2x2',...
            }
        m_num = -3;
    case {'4'}
        m_num = 4;
    case {'-4'}
        m_num = -4;
    case {'5'}
        m_num = 5;
    case {'-5'}
        m_num = -5;
    otherwise
        m_num = 1i;
end


end
